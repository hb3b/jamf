apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "jamf.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "jamf.name" . }}
    helm.sh/chart: {{ include "jamf.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  podManagementPolicy: OrderedReady
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jamf.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ template "jamf.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jamf.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: logs
        emptyDir: {}
      containers:
      - name: auditlog
        image: busybox
        args: [/bin/sh, -c, 'tail -n+1 -f /logs/tomcat-logs/JAMFChangeManagement.log']
        volumeMounts:
        - name: logs
          mountPath: /logs
      - name: serverlog
        image: busybox
        args: [/bin/sh, -c, 'tail -n+1 -f /logs/tomcat-logs/JAMFSoftwareServer.log']
        volumeMounts:
        - name: logs
          mountPath: /logs
      - name: {{ .Chart.Name }}
        env:
        - name: MASTER_NODE_NAME
          value: {{ include "jamf.fullname" . }}-0
        - name: MEMCACHED_HOST
          value: {{ template "jamf.memcached.fullname" . }}
        - name: JAVA_ARGS
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: DATABASE_HOST
        {{- if .Values.mariadb.enabled }}
          value: {{ template "jamf.mariadb.fullname" . }}
        {{- else }}
          value: {{ .Values.externalDatabase.host | quote }}
        {{- end }}
        - name: DATABASE_NAME
        {{- if .Values.mariadb.enabled }}
          value: {{ .Values.mariadb.db.name | quote }}
        {{- else }}
          value: {{ .Values.externalDatabase.database | quote }}
        {{- end }}
        - name: DATABASE_USERNAME
        {{- if .Values.mariadb.enabled }}
          value: {{ .Values.mariadb.db.user | quote }}
        {{- else }}
          value: {{ .Values.externalDatabase.user | quote }}
        {{- end }}
        - name: DATABASE_PASSWORD
        {{- if .Values.mariadb.enabled }}
          valueFrom:
            secretKeyRef:
              name: {{ template "jamf.mariadb.fullname" . }}
              key: mariadb-password
        {{- else }}
          value: {{ .Values.externalDatabase.password | quote }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        ports:
        - containerPort: 8080
          name: http-alt-port
          protocol: TCP
        - containerPort: 9000
          name: jmx-port
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - res=$(curl -m 1 --silent -w '%{http_code}' http://localhost:8080/healthCheck.html);http_code="${res:${#res}-3}";if
              [[ $http_code == 200 ]]; then exit 0; else body="${res:0:${#res}-3}";
              if [[ $(echo $body|jq '.[0].healthCode') -ge 0 ]] || [[ $(echo $body|jq
              '.[0].healthCode') == null ]]; then exit 0; else exit 1; fi fi
          failureThreshold: 150
          initialDelaySeconds: 20
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /usr/local/tomcat/logs
          name: logs
          subPath: tomcat-logs
        resources:
{{- toYaml .Values.resources | nindent 10 -}}
